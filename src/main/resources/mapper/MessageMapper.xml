<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.wgd.community.mapper.MessageMapper">
    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <resultMap id="BaseResultMap" type="org.wgd.community.model.pojo.Message">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="from_id" property="fromId" jdbcType="INTEGER"/>
        <result column="to_id" property="toId" jdbcType="INTEGER"/>
        <result column="conversation_id" property="conversationId" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from message
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="org.wgd.community.model.pojo.Message">
        insert into message (from_id, to_id,
                             conversation_id, status, create_time,
                             content)
        values (#{fromId,jdbcType=INTEGER}, #{toId,jdbcType=INTEGER},
                #{conversationId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
                #{content,jdbcType=LONGVARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="org.wgd.community.model.pojo.Message">
        update message
        set from_id         = #{fromId,jdbcType=INTEGER},
            to_id           = #{toId,jdbcType=INTEGER},
            conversation_id = #{conversationId,jdbcType=VARCHAR},
            status          = #{status,jdbcType=INTEGER},
            create_time     = #{createTime,jdbcType=TIMESTAMP},
            content         = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select id, from_id, to_id, conversation_id, status, create_time, content
        from message
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, from_id, to_id, conversation_id, status, create_time, content
        from message
    </select>
    <select id="pageConversationsByUserId" resultType="org.wgd.community.model.pojo.Message">
        select id, from_id, to_id, conversation_id, status, create_time, content
        from message
        where id in (
            select max(id)
            from message
            where status
            != 2
          and from_id != 1
          and (from_id = #{userId}
           or to_id = #{userId})
        group by conversation_id
            )
        order by create_time desc
            limit #{no}, #{size}
    </select>
    <select id="countConversations" resultType="java.lang.Integer">
        select count(m.max_id)
        from (
                 select max(id) as max_id
                 from message
                 where status != 2
        and from_id != 1
        and (from_id = #{userId}
                    or to_id = #{userId})
                 group by conversation_id
             ) as m
    </select>
    <select id="pageLettersByConversationId" resultType="org.wgd.community.model.pojo.Message">
        select id, from_id, to_id, conversation_id, status, create_time, content
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conId}
        order by create_time desc
            limit #{no}, #{size}
    </select>
    <select id="countLettersByConversationId" resultType="int">
        select count(id)
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="countUnreadInfo" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <update id="updateStatusesByIds">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectLatestMessage" resultType="org.wgd.community.model.pojo.Message">
        select <include refid="selectFields"></include>
        from message
        where id in (
        select max(id) from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        )
    </select>

    <select id="countMessage" resultType="int">
        select count(id) from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
          and conversation_id = #{topic}
    </select>

    <select id="countUnReadSystemInfo" resultType="int">
        select count(id) from message
        where status = 0
        and from_id = 1
        and to_id = #{userId}
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>
    </select>

    <select id="listMessages" resultType="org.wgd.community.model.pojo.Message">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        order by create_time desc
        limit #{offset}, #{limit}
    </select>
</mapper>